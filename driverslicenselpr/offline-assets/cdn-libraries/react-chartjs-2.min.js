/**
 * Minified by jsDelivr using Terser v5.37.0.
 * Original file: /npm/react-chartjs-2@5.3.0/dist/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import React,{forwardRef,useRef,useEffect}from"react";import{Chart as Chart$1,LineController,BarController,RadarController,DoughnutController,PolarAreaController,BubbleController,PieController,ScatterController}from"chart.js";const defaultDatasetIdKey="label";function reforwardRef(e,t){"function"==typeof e?e(t):e&&(e.current=t)}function setOptions(e,t){const r=e.options;r&&t&&Object.assign(r,t)}function setLabels(e,t){e.labels=t}function setDatasets(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"label";const a=[];e.datasets=t.map((t=>{const n=e.datasets.find((e=>e[r]===t[r]));return n&&t.data&&!a.includes(n)?(a.push(n),Object.assign(n,t),n):{...t}}))}function cloneData(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"label";const r={labels:[],datasets:[]};return setLabels(r,e.labels),setDatasets(r,e.datasets,t),r}function getDatasetAtEvent(e,t){return e.getElementsAtEventForMode(t.nativeEvent,"dataset",{intersect:!0},!1)}function getElementAtEvent(e,t){return e.getElementsAtEventForMode(t.nativeEvent,"nearest",{intersect:!0},!1)}function getElementsAtEvent(e,t){return e.getElementsAtEventForMode(t.nativeEvent,"index",{intersect:!0},!1)}function ChartComponent(e,t){const{height:r=150,width:a=300,redraw:n=!1,datasetIdKey:o,type:l,data:s,options:c,plugins:u=[],fallbackContent:d,updateMode:i,...f}=e,C=useRef(null),h=useRef(null),p=()=>{C.current&&(h.current=new Chart$1(C.current,{type:l,data:cloneData(s,o),options:c&&{...c},plugins:u}),reforwardRef(t,h.current))},E=()=>{reforwardRef(t,null),h.current&&(h.current.destroy(),h.current=null)};return useEffect((()=>{!n&&h.current&&c&&setOptions(h.current,c)}),[n,c]),useEffect((()=>{!n&&h.current&&setLabels(h.current.config.data,s.labels)}),[n,s.labels]),useEffect((()=>{!n&&h.current&&s.datasets&&setDatasets(h.current.config.data,s.datasets,o)}),[n,s.datasets]),useEffect((()=>{h.current&&(n?(E(),setTimeout(p)):h.current.update(i))}),[n,c,s.labels,s.datasets,i]),useEffect((()=>{h.current&&(E(),setTimeout(p))}),[l]),useEffect((()=>(p(),()=>E())),[]),React.createElement("canvas",{ref:C,role:"img",height:r,width:a,...f},d)}const Chart=forwardRef(ChartComponent);function createTypedChart(e,t){return Chart$1.register(t),forwardRef(((t,r)=>React.createElement(Chart,{...t,ref:r,type:e})))}const Line=createTypedChart("line",LineController),Bar=createTypedChart("bar",BarController),Radar=createTypedChart("radar",RadarController),Doughnut=createTypedChart("doughnut",DoughnutController),PolarArea=createTypedChart("polarArea",PolarAreaController),Bubble=createTypedChart("bubble",BubbleController),Pie=createTypedChart("pie",PieController),Scatter=createTypedChart("scatter",ScatterController);export{Bar,Bubble,Chart,Doughnut,Line,Pie,PolarArea,Radar,Scatter,getDatasetAtEvent,getElementAtEvent,getElementsAtEvent};
//# sourceMappingURL=/sm/f26aea79e98785cf7c837c135273c5467e9de57b821080996088967664936a2e.map